模块“工具二库”。
赋予“句柄”【私】以函数集“‘参数0’.so”。
调用先函数以“_init__”、‘句柄’、“-$0-$9-$19-$2-$3-$4-$13-$23-$17-c*-c*-c*-c*-c*-c*-c*-c*”了、“数目”、“之”、
	“解释”、“下代码”、“上代码”、“、”、“下原样”、“上原样”。
调用先函数以“_init2__”、‘句柄’、“-$cbx”了。

函数“加反斜杠”以“_addslashes__”、‘句柄’、“-A-c*-c*”（有C、R（正则表达式）、x三种）。
函数“断无意义名”以“is_noname__”、‘句柄’、“i-c*”。
函数“查找并获取”以“find_and_get__”、‘句柄’、“-E-A-c*-i-c*-$11-$1-c*-Z”（src、开始位置、tag1、取信息代码（、c*截止……））。
函数“多串替换”以“replace__”、‘句柄’、“-E-A-$11-$1-c*-Z”（src（、c* tag1、c* 代码 / 允许过滤（当tag1空。sp-、0-9、a-z、A-Z、集合）、……））。
（错误返回值：10、没有设标签头或尾，1、标签头尾的头不对）
函数“标签替换”以“tag_replace__”、‘句柄’、“-E-A-c*-$11-$1-c*-Z”（src、代码（、…… c* 1开头的为标签头，2开头的为标签尾，可多））。
函数“串截取”以“strmid__”、‘句柄’、“-A-c*-Z”（源
	（、i 开始位置，<0倒数。缺省0
	、i 结束位置，<=0倒数。缺省0
	、c* 移过该串长，当不为NULL时
	、c* 后移过该串长，当不为NULL时））。
函数“串显长”以“sp_len__”、‘句柄’、“i-c*-i”（串、限制）。

函数“串位置”  以“strpos__”、‘句柄’、“l-c*-c*-${l0}-Z”（串、搜索的串（、i（起始位置）、c*（移过该串长）、c*（2 返回加上搜串长））。不存在时返回-1）。
函数“串尤位置”以“strpos__”、‘句柄’、“l-c*-c*-${l1}-Z”（按utf8计算）。
函数“串倒位置”  以“strrpos__”、‘句柄’、“l-c*-c*-${l0}-Z”。
函数“串尤倒位置”以“strrpos__”、‘句柄’、“l-c*-c*-${l1}-Z”。

函数“串包含”  以“strstr__”、‘句柄’、“i-c*-${l0}-Z”。
函数“串头匹配”以“strstr__”、‘句柄’、“i-c*-${l1}-Z”。
函数“串尾匹配”以“strstr__”、‘句柄’、“i-c*-${l2}-Z”。
函数“串整匹配”以“strstr__”、‘句柄’、“i-c*-${l3}-Z”。
定义“头匹配”【倒挂】以下代码
	调用‘串头匹配’、‘参数1’、‘参数栈2’
上代码。
定义“尾匹配”【倒挂】以下代码
	调用‘串尾匹配’、‘参数1’、‘参数栈2’
上代码。
定义“内包含”【倒挂】以下代码
	调用‘串包含’、‘参数1’、‘参数栈2’
上代码。

函数“去头尾空白”以“trim__”、‘句柄’、“-A-c*-${l3}”。
函数“去头空白”  以“trim__”、‘句柄’、“-A-c*-${l1}”。
函数“去尾空白”  以“trim__”、‘句柄’、“-A-c*-${l2}”。

函数  “迭代解”以“_foreach__”、‘句柄’、“-E-A-$11-$1-${l0}-c*-Z”（代码、参数……）。
函数“序迭代解”以“_foreach__”、‘句柄’、“-E-A-$11-$1-${l1}-c*-Z”。
函数  “迭代二”以“_foreach2__”、‘句柄’、“-E-”（A-$11）“V-$1-${l0}-c*-i-Z”（代码、几个一组、参数……）。
函数“序迭代二”以“_foreach2__”、‘句柄’、“-E-”（A-$11）“V-$1-${l1}-c*-i-Z”。

（函数“遍历变量名”以“_for_name__”、‘句柄’、“-E-$11-$1-c*-$1-i”（代码、-1）。）

（分配成形如“头之2之1”的多个变量，另有“头数目”、“头数目2”）
函数“新建数组”以   “_new_array__”、‘句柄’、“i-$1-c*-i-Z”（变量头、几个一组、……）。
函数“增至数组”以“_add_to_array__”、‘句柄’、“i-$1-c*-i-Z”（变量头、几个一组、……）。
函数“搜索数组”以“_array_find__”、‘句柄’、“i-$1-c*-Z”（变量头（、……对应匹配））。

函数    “遍历数组”以“_for_array__”、‘句柄’、“-E-A-$11-$1-${l0}-${l0}-c*-Z”（代码（、c*变量头……））。
函数  “逆遍历数组”以“_for_array__”、‘句柄’、“-E-A-$11-$1-${l0}-${l1}-c*-Z”。
函数  “序遍历数组”以“_for_array__”、‘句柄’、“-E-A-$11-$1-${l1}-${l0}-c*-Z”。
函数“逆序遍历数组”以“_for_array__”、‘句柄’、“-E-A-$11-$1-${l1}-${l1}-c*-Z”。

函数“迭代路径”以“for_path__”、‘句柄’、“-E-$11-$1-c*-c*”（代码（传：路径、级数））。
函数“迭代路径二”以“for_path2__”、‘句柄’、“-E-$11-$1-c*-c*-l-l”（代码（传：路径、级数、后补）、路径是否可空（0 1 2）、开始级）。

函数“随机数种”以“srand__”、‘句柄’、“-l”（0到65535，-1为以时间）。
函数“随机数组”以“rand__”、‘句柄’、“i-$1-c*-l-l”（变量头、最小值、最大值）。
函数“随机数”以“rando__”、‘句柄’、“l-l-l”（最小值、最大值）。

函数“侦听信号”以“signal__”、‘句柄’、“-i”（signum）。
函数“设侦听信号代码”以“signal_cb__”、‘句柄’、“-c*”。

函数“建子进程”以“spawn__”、‘句柄’、“-B-Z”（……）。

函数“分配共享内存”以“new_shm__”、‘句柄’、“-B-c*-i-i”（fname、proj_id 1至255、字节数）。
函数“连接共享内存”以“attach_shm__”、‘句柄’、“-B-c*”（id）。
函数“释放共享内存”以“delete_shm__”、‘句柄’、“-Z”（c* id……）。
函数“得共享内存”以“get_shm__”、‘句柄’、“c*-c*”。
函数“设共享内存”以“set_shm__”、‘句柄’、“i-c*-c*-Z”（柄、内容。返回是否成功）。
